CREATE TABLE PUBLISHER(
NAME VARCHAR2(20) PRIMARY KEY,
ADDRESS VARCHAR2(20),
PHONE NUMBER(10));

INSERT INTO PUBLISHER VALUES('Pearson','London',9874522224);
INSERT INTO PUBLISHER VALUES('TataMcGrew','NewYork',9858523565);
INSERT INTO PUBLISHER VALUES('Oxford','UK',9885121112);
INSERT INTO PUBLISHER VALUES('Cambridge','UK',9785634615);
INSERT INTO PUBLISHER VALUES('IOreilly','Calofornia',9994125455);

=============================================================================

CREATE TABLE BOOK(
BOOK_ID VARCHAR2(20) PRIMARY KEY,
TITLE VARCHAR2(40),
PUBLISHER_NAME VARCHAR2(20) references
PUBLISHER(NAME) on delete cascade,
PUB_YEAR INT);

INSERT INTO BOOK VALUES('B101','DBMS','Pearson',2017);
INSERT INTO BOOK VALUES('B102','AIML','TataMcGrew',2009);
INSERT INTO BOOK VALUES('B103','DCN','Pearson',2017);
INSERT INTO BOOK VALUES('B104','ATC','Oxford',2017);
INSERT INTO BOOK VALUES('B105','Python','IOreilly',2014);s
INSERT INTO BOOK VALUES('B106','Hadoop','Pearson',2000);

======================================================================

CREATE TABLE BOOK_AUTHORS(
BOOK_ID VARCHAR(20),
AUTHOR_NAME VARCHAR(20),
PRIMARY KEY (BOOK_ID, AUTHOR_NAME),
FOREIGN KEY (BOOK_ID) REFERENCES BOOK ON DELETE CASCADE);

INSERT INTO BOOK_AUTHORS VALUES('B101','Elmarsi');
INSERT INTO BOOK_AUTHORS VALUES('B101','Navathe');
INSERT INTO BOOK_AUTHORS VALUES('B101','Ramakrishnan');
INSERT INTO BOOK_AUTHORS VALUES('B106','Dougles');
INSERT INTO BOOK_AUTHORS VALUES('B102','Elaine');
INSERT INTO BOOK_AUTHORS VALUES('B105','Srinivasan');

=======================================================================

CREATE TABLE LIBRARY_PROGRAMME(
PROGRAMME_ID VARCHAR(20) PRIMARY KEY,
PROGRAMME_NAME VARCHAR(10),
ADDRESS VARCHAR(20));

INSERT INTO LIBRARY_PROGRAMME VALUES('L1','SAHYADRI','Mangalore');
INSERT INTO LIBRARY_PROGRAMME VALUES('L2','SAPNA','Mangalore');
INSERT INTO LIBRARY_PROGRAMME VALUES('L3','SANKALP','Bangalore');
INSERT INTO LIBRARY_PROGRAMME VALUES('L4','PENGUIN','Chennai');
INSERT INTO LIBRARY_PROGRAMME VALUES('L5','AGNES','Chennai');

======================================================================

CREATE TABLE BOOK_COPIES(
BOOK_ID VARCHAR(20) REFERENCES BOOK(BOOK_ID) ON DELETE CASCADE,
PROGRAMME_ID VARCHAR(20) REFERENCES LIBRARY_PROGRAMME(PROGRAMME_ID) ON DELETE CASCADE,
NO_OF_COPIES NUMBER(2),
PRIMARY KEY (BOOK_ID,PROGRAMME_ID));

INSERT INTO BOOK_COPIES VALUES('B101','L1',99);
INSERT INTO BOOK_COPIES VALUES('B102','L1',99);
INSERT INTO BOOK_COPIES VALUES('B102','L2',99);
INSERT INTO BOOK_COPIES VALUES('B103','L1',99);

==========================================================================

**************************************************************************************
CREATE TABLE STUDENT(
USN VARCHAR(20),
NAME VARCHAR(20),
DOB NUMBER(20),
SEMESTER NUMBER(10),
PERCENTAGE NUMBER(10));

INSERT INTO STUDENT VALUES('4SF21IS092','ROSHITH',07/03/2003,5,91);
INSERT INTO STUDENT VALUES('4SF21IS107','SONIYA',05/05/2003,5,99);
INSERT INTO STUDENT VALUES('4SF21IS401','ABHI',03/08/2002,6,95);
INSERT INTO STUDENT VALUES('4SF21IS024','BHOOMIKA',24/04/2003,5,99);
INSERT INTO STUDENT VALUES('4SF21IS063','PRAJWAL',06/10/2002,6,92);

DISPALY TOTAL NO.OF STUDENT IN CLASS =>
SELECT COUNT(*) FROM STUDENT;


FIND THE AGGREGATE PERCANTSGE OF THE CLASS=>
SELECT AVG(PERCENTAGE) FROM STUDENT;


DISPLAY THE NAME OF STUDENTS WITH HIGHEST& LOWEST PER=>
SELECT MAX (PERCENTAGE), MIN (PERCENTAGE) FROM STUDENT ;


NAME & PER OF ALL STUDENT=>
SELECT NAME,PERCENTAGE FROM STUDENT;


INFORMATION OF STU WITH USN='----'=>
SELECT * FROM STUDENT
WHERE USN='4SF21IS092';


CHANGE NAME OF STUFDENT TO 'RAM' BEARIG USN='------'=>
UPDATE STUDENT SET NAME='RAJ'
WHERE USN='4SF21IS063';

**************************************************************************************

CREATE TABLE BOOK_LENDING(
BOOK_ID VARCHAR(20),
PROGRAMME_ID VARCHAR(20),
CARD_NO VARCHAR(20),
DATE_OUT DATE,
DUE_DATE DATE,
PRIMARY KEY (PROGRAMME_ID,BOOK_ID,CARD_NO),
FOREIGN KEY (BOOK_ID) REFERENCES BOOK(BOOK_ID) ON DELETE CASCADE,
FOREIGN KEY(PROGRAMME_ID) REFERENCES LIBRARY_PROGRAMME(PROGRAMME_ID) ON DELETE CASCADE,
CONSTRAINT CK1 CHECK (DUE_DATE>DATE_OUT));

INSERT INTO BOOK_LENDING VALUES('B101','L1','FA101','02-JAN-21','09-JAN-21');
INSERT INTO BOOK_LENDING VALUES('B101','L1','FA102','02-MAR-23','09-MAR-23');
INSERT INTO BOOK_LENDING VALUES('B102','L1','FA102','02-MAR-23','09-MAR-23');
INSERT INTO BOOK_LENDING VALUES('B101','L2','FA102','02-MAR-23','09-MAR-23');
INSERT INTO BOOK_LENDING VALUES('B101','L1','S103','04-APR-22','30-JUN-22');

==============================================================================================

1>
SELECT B.BOOK_ID,TITLE,PUBLISHER_NAME,AUTHOR_NAME,NO_OF_COPIES
FROM BOOK B, BOOK_AUTHORS A, BOOK_COPIES BC
WHERE B.BOOK_ID = BC.BOOK_ID AND
B.BOOK_ID = A.BOOK_ID;

2>
SELECT CARD_NO FROM BOOK_LENDING
WHERE DATE_OUT
BETWEEN '01-JAN-2023'
AND '30-JUN-2023'
GROUP BY CARD_NO
HAVING COUNT(*)>=3;

3>
DELETE FROM BOOK WHERE BOOK_ID = &BID;

4>
CREATE TABLE BOOK1(
BOOK_ID VARCHAR2(20) PRIMARY KEY,
TITLE VARCHAR2(40),
PUBLISHER_NAME VARCHAR2(20) REFERENCES
PUBLISHER(NAME) ON DELETE CASCADE,
PUB_YEAR INT)
PARTITION BY RANGE(PUB_YEAR)
(PARTITION P1 VALUES LESS THAN(2001),
PARTITION P2 VALUES LESS THAN(2005),
PARTITION P3 VALUES LESS THAN(2010),
PARTITION P4 VALUES LESS THAN(MAXVALUE));


INSERT INTO BOOK1 VALUES('B101','DBMS','Pearson',2017);
INSERT INTO BOOK1 VALUES('B102','AIML','TataMcGrew',2009);
INSERT INTO BOOK1 VALUES('B103','DCN','Pearson',2017);
INSERT INTO BOOK1 VALUES('B104','ATC','Oxford',2017);
INSERT INTO BOOK1 VALUES('B105','Python','IOreilly',2014);
INSERT INTO BOOK1 VALUES('B106','Hadoop','Pearson',2000);


SELECT * FROM BOOK1 PARTITION(P1);


5>



=============================================
